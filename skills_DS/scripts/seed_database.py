from api.views_admin import ScrapeJobsView,ExtractSkillsView
from api.models import JobTitle, JobPosting
import requests
import json
import random

def run():
    # radius/distance
    dist = 20

    #set location for map
    location = ['Toronto', 'Montreal', 'Calgary', 'Ottawa', 'Edmonton', 'Mississauga', 'North York', 'Winnipeg', 'Scarborough', 'Vancouver', 'Quebec', 'Hamilton', 'Brampton', 'Surrey', 'Laval', 'Halifax', 'Etobicoke', 'London', 'Okanagan', 'Victoria', 'Windsor', 'Markham', 'Oshawa', 'Gatineau', 'Vaughan', 'Kitchener', 'Longueuil', 'Burnaby', 'Ladner', 'Saskatoon', 'Richmond Hill', 'Barrie', 'Richmond', 'Nepean', 'Regina', 'Oakville', 'Burlington', 'Greater Sudbury', 'Abbotsford', 'Saguenay', 'St. Catharines', 'Sherbrooke', 'Anmore', 'Levis', 'Kelowna', 'Cambridge', 'Trois-Rivieres', 'Guelph', 'East York', 'Coquitlam', 'Kingston', 'Sydney', 'Delta', 'Dartmouth', 'Thunder Bay', "St. John's", 'Waterloo', 'Terrebonne', 'Ajax', 'Saint John', 'Pickering', 'Brantford', 'Moncton', 'Nanaimo', 'Milton', 'Sarnia', 'Niagara Falls', 'Willowdale', 'Saint-Laurent', 'Chilliwack', 'Repentigny', 'Fort McMurray', 'Peterborough', 'Sault Ste. Marie', 'Newmarket', 'La Haute-Saint-Charles', 'Red Deer', 'Saint-Leonard', 'Saint-Jean-sur-Richelieu', 'Lethbridge', 'Maple Ridge', 'Brossard', 'Kamloops', 'Notre-Dame-de-Grace', 'White Rock', 'Prince George', 'Medicine Hat', 'Norfolk County', 'Drummondville', 'New Westminster', 'St. Albert', 'Sherwood Park', 'Saint-Jerome', 'Jonquiere', 'Granby', 'Fredericton', 'Welland', 'Saint-Hyacinthe', 'North Bay', 'Belleville', 'Shawinigan', 'Dollard-Des Ormeaux', 'Cornwall', 'North Vancouver', 'Vernon', 'Blainville', 'West End', 'Chatham', 'Timmins', 'Chateauguay', 'Quinte West', 'West Vancouver', 'Charlottetown', 'Rimouski', 'Saint-Eustache', 'Grande Prairie', 'Boucherville', 'Salaberry-de-Valleyfield', 'Penticton', 'St. Thomas', 'Rock Forest', 'Joliette', 'Mirabel', 'Mascouche', 'Prince Albert', 'Victoriaville', 'Brant', 'Woodstock', 'Campbell River', 'Ancaster', 'Courtenay', 'Orangeville', 'North Cowichan', 'Moose Jaw', 'Midland', 'Cote-Saint-Luc', 'Saint-Georges', "Val-d'Or", 'Stratford', 'Orillia', 'Pointe-Claire', 'Baie-Comeau', 'Alma', 'Sainte-Julie', 'West Kelowna', 'Port Moody', 'Lloydminster', 'Boisbriand', 'Brandon', 'Vaudreuil-Dorion', 'Thetford-Mines', 'Walnut Grove', 'Prince Edward', 'Sainte-Therese', 'Airdrie', 'Mount Pearl', 'Saint-Bruno-de-Montarville', 'Rouyn-Noranda', 'Saint-Constant', 'Brockville', 'Langley', 'Whitehorse', 'Owen Sound', 'Chambly', 'Sept-Iles', 'Langford', 'Duncan', 'La Prairie', 'Lower Sackville', 'Port Alberni', 'Keswick', 'Varennes', 'Clarence-Rockland', 'Truro', 'Westmount', 'Kirkland', 'Lindsay', 'New Glasgow', 'Cole Harbour', 'Glace Bay', 'Huntsville', 'Terrace', 'North Battleford', 'Beaconsfield', 'Mont-Royal', 'Beloeil', 'Corner Brook', 'Cranbrook', 'Port Colborne', 'Riviere-du-Loup', 'Dieppe', 'Thorold', 'Miramichi', 'Cobourg', 'Dorval', 'Oak Bay', 'Amos', 'Spruce Grove', 'Pitt Meadows', 'Fort St. John', 'Deux-Montagnes', 'Saint-Augustin-de-Desmaures', 'Conception Bay South', 'Saint-Lazare', 'Sainte-Catherine', "L'Assomption", 'Edmundston', "L'Ancienne-Lorette", 'Cochrane', 'Lutes Mountain', 'Sainte-Catherine', 'Salmon Arm', 'Rayside-Balfour', 'Petawawa', 'Fort Erie', 'Candiac', 'Yellowknife', 'Collingwood', 'Mont-Saint-Hilaire', 'Camrose', 'Yorkton', 'Saint-Basile-le-Grand', 'Leduc', 'Pembroke', 'Magog', 'Greater Napanee', 'Kenora', 'le Plateau', 'Fort Saskatchewan', 'Okotoks', 'Gaspe', 'Matane', 'Summerside', 'Prince Rupert', 'Swift Current', 'Colwood', 'Rosemere', 'Williams Lake', 'Saint-Lin-Laurentides', 'Simcoe', 'Quesnel', 'Bay Roberts', 'Mont-Laurier', 'Portage la Prairie', 'Dolbeau-Mistassini', 'Powell River', 'Brooks', 'Bathurst', 'Kentville', 'Elliot Lake', 'Thompson', 'Aldergrove', 'Canmore', 'Hawkesbury', 'North Perth', 'Grand Falls-Windsor', 'Parksville', 'Beauharnois', 'Ingersoll', 'Montmagny', 'Cold Lake', 'Sainte-Marie', 'Uxbridge', 'Fall River', 'Amherstburg', 'Sainte-Marthe-sur-le-Lac', 'Wetaskiwin', 'Pincourt', 'Paris', 'Becancour', 'North Saanich', 'Cowansville', 'Dawson Creek', 'Sainte-Anne-des-Plaines', 'Lambton Shores', 'Sainte-Adele', 'Les Coteaux', 'Whistler', 'Smiths Falls', 'Sylvan Lake', 'Temiskaming Shores', 'Cantley', 'Rawdon', 'Labrador City', 'Angus', 'Prevost', 'Mercier', 'Lacombe', 'Strathmore', 'Hanceville', 'South Huron', 'Bells Corners', "L'Ile-Perrot", 'Estevan', 'Hinton', "Notre-Dame-de-l'Ile-Perrot", 'High River', 'Nelson', 'Carleton Place', 'Trail', 'Selkirk', 'Lorraine', 'Steinbach', 'Arnprior', 'Lachute', 'Val-des-Monts', 'La Tuque', 'Weyburn', 'Amherst', 'Dorchester', 'Roberval', 'Saint-Raymond', 'Huron East', 'Kapuskasing', 'Saint-Sauveur', 'Oromocto', 'Kitimat', 'La Malbaie', 'Stony Plain', 'Mont-Tremblant', 'Binbrook', 'Whitecourt', 'Lavaltrie', 'Ladysmith', 'Pont-Rouge', 'Castlegar', 'Otterburn Park', 'Dauphin', 'Bois-des-Filion', 'Winkler', 'Concord', 'Bracebridge', 'Notre-Dame-des-Prairies', 'Dryden', 'Taber', 'Morinville', 'Silver Berry', 'Saint-Felicien', 'Saint-Hippolyte', 'Bridgewater', 'Goderich', 'Wild Rose', 'Renfrew', 'Edson', 'Fort Frances', 'Chandler', 'Kirkland Lake', 'Slave Lake', 'Happy Valley-Goose Bay', 'Wasaga Beach', 'Chibougamau', 'Revelstoke', 'Aylmer', 'Pont Rouge', 'Camlachie', 'Banff', 'Yarmouth', 'Carignan', 'Campbellton', 'Beaumont', 'Innisfil', 'Delson', 'Sydney Mines', 'Baie-Saint-Paul', 'Hanover', 'La Sarre', 'Asbestos', 'Merritt', 'Bluewater', 'Coaticook', 'Hampstead', 'Olds', 'Greenwood', 'Gibsons', 'Carbonear', 'Saint-Zotique', 'Kincardine', 'Plessisville', 'Brownsburg-Chatham', 'Ponoka', 'Mont-Joli', 'Rocky Mountain House', 'Kimberley', 'Perth', 'Parry Sound', 'Pointe-Calumet', 'Morden', 'Coaldale', 'Summerland', 'Stephenville', 'Amqui', 'Beauceville', 'Saint-Joseph-du-Lac', 'Sooke', 'Iqaluit', 'Drayton Valley', 'Farnham', 'The Pas', 'Bromont', 'Saint-Felix-de-Valois']
    
    locationRandom = []

    #random 50 locations
    i = 0
    while i < 50:
        ran = random.randint(0,len(location)-1)
        if ran in locationRandom:
            while ran in locationRandom:
                ran = random.randint(0,len(location)-1)
            locationRandom.append(ran)
        else:
            locationRandom.append(ran)
        i = i + 1


    #number of jobs
    numJobs = 20

    #set remote
    remote=['none','only','remote']

    # set country
    countries = ['CA']

    #getting a list of jobs
    joblist= ['Academic librarian', 'Accountant', 'Accounting technician', 'Actuary', 'Adult nurse', 'Advertising account executive', 'Advertising account planner', 'Advertising copywriter', 'Advice worker', 'Advocate (Scotland)', 'Aeronautical engineer', 'Agricultural consultant', 'Agricultural manager', 'Aid worker/humanitarian worker', 'Air traffic controller', 'Airline cabin crew', 'Amenity horticulturist', 'Analytical chemist', 'Animal nutritionist', 'Animator', 'Archaeologist', 'Architect', 'Architectural technologist', 'Archivist', 'Armed forces officer', 'Aromatherapist', 'Art therapist', 'Arts administrator', 'Auditor', 'Automotive engineer', 'Barrister', 'Barristerâ€™s clerk', 'Bilingual secretary', 'Biomedical engineer', 'Biomedical scientist', 'Biotechnologist', 'Brand manager', 'Broadcasting presenter', 'Building control officer/surveyor', 'Building services engineer', 'Building surveyor', 'Camera operator', 'Careers adviser (higher education)', 'Careers adviser', 'Careers consultant', 'Cartographer', 'Catering manager', 'Charities administrator', 'Charities fundraiser', 'Chemical (process) engineer', 'Child psychotherapist', "Children's nurse", 'Chiropractor', 'Civil engineer', 'Civil Service administrator', 'Clinical biochemist', 'Clinical cytogeneticist', 'Clinical microbiologist', 'Clinical molecular geneticist', 'Clinical research associate', 'Clinical scientist - tissue typing', 'Clothing and textile technologist', 'Colour technologist', 'Commercial horticulturist', 'Commercial/residential/rural surveyor', 'Commissioning editor', 'Commissioning engineer', 'Commodity broker', 'Communications engineer', 'Community arts worker', 'Community education officer', 'Community worker', 'Company secretary', 'Computer sales support', 'Computer scientist', 'Conference organiser', 'Consultant', 'Consumer rights adviser', 'Control and instrumentation engineer', 'Corporate banker', 'Corporate treasurer', 'Counsellor', 'Courier/tour guide', 'Court reporter/verbatim reporter', 'Credit analyst', 'Crown Prosecution Service lawyer', 'Crystallographer', 'Curator', 'Customs officer', 'Cyber security specialist', 'Dance movement therapist', 'Data analyst', 'Data scientist', 'Data visualisation analyst', 'Database administrator', 'Debt/finance adviser', 'Dental hygienist', 'Dentist', 'Design engineer', 'Dietitian', 'Diplomatic service', 'Doctor (general practitioner GP)', 'Doctor (hospital)', 'Dramatherapist', 'Economist', 'Editorial assistant', 'Education administrator', 'Electrical engineer', 'Electronics engineer', 'Employment advice worker', 'Energy conservation officer', 'Engineering geologist', 'Environmental education officer', 'Environmental health officer', 'Environmental manager', 'Environmental scientist', 'Equal opportunities officer', 'Equality and diversity officer', 'Ergonomist', 'Estate agent', 'European Commission administrators', 'Exhibition display designer', 'Exhibition organiser', 'Exploration geologist', 'Facilities manager', 'Field trials officer', 'Financial manager', 'Firefighter', 'Fisheries officer', 'Fitness centre manager', 'Food scientist', 'Food technologist', 'Forensic scientist', 'Geneticist', 'Geographical information systems manager', 'Geomatics/land surveyor', 'Government lawyer', 'Government research officer', 'Graphic designer', 'Health and safety adviser', 'Health and safety inspector', 'Health promotion specialist', 'Health service manager', 'Health visitor', 'Herbalist', 'Heritage manager', 'Higher education administrator', 'Higher education advice worker', 'Homeless worker', 'Horticultural consultant', 'Hotel manager', 'Housing adviser', 'Human resources officer', 'Hydrologist', 'Illustrator', 'Immigration officer', 'Immunologist', 'Industrial/product designer', 'Information scientist', 'Information systems manager', 'Information technology/software trainers', 'Insurance broker', 'Insurance claims inspector', 'Insurance risk surveyor', 'Insurance underwriter', 'Interpreter', 'Investment analyst', 'Investment banker - corporate finance', 'Investment banker â€“ operations', 'Investment fund manager', 'IT consultant', 'IT support analyst', 'Journalist', 'Laboratory technician', 'Land-based engineer', 'Landscape architect', 'Learning disability nurse', 'Learning mentor', 'Lecturer (adult education)', 'Lecturer (further education)', 'Lecturer (higher education)', 'Legal executive', 'Leisure centre manager', 'Licensed conveyancer', 'Local government administrator', 'Local government lawyer', 'Logistics/distribution manager', 'Magazine features editor', 'Magazine journalist', 'Maintenance engineer', 'Management accountant', 'Manufacturing engineer', 'Manufacturing machine operator', 'Manufacturing toolmaker', 'Marine scientist', 'Market research analyst', 'Market research executive', 'Marketing account manager', 'Marketing assistant', 'Marketing executive', 'Marketing manager (social media)', 'Materials engineer', 'Materials specialist', 'Mechanical engineer', 'Media analyst', 'Media buyer', 'Media planner', 'Medical physicist', 'Medical representative', 'Mental health nurse', 'Metallurgist', 'Meteorologist', 'Microbiologist', 'Midwife', 'Mining engineer', 'Mobile developer', 'Multimedia programmer', 'Multimedia specialists', 'Museum education officer', 'Museum/gallery exhibition officer', 'Music therapist', 'Nanoscientist', 'Nature conservation officer', 'Naval architect', 'Network administrator', 'Nurse', 'Nutritional therapist', 'Nutritionist', 'Occupational therapist', 'Oceanographer', 'Office manager', 'Operational researcher', 'Orthoptist', 'Outdoor pursuits manager', 'Packaging technologist', 'Paediatric nurse', 'Paramedic', 'Patent attorney', 'Patent examiner', 'Pension scheme manager', 'Personal assistant', 'Petroleum engineer', 'Pharmacist', 'Pharmacologist', 'Pharmacovigilance officer', 'Photographer', 'Physiotherapist', 'Picture researcher', 'Planning and development surveyor', 'Planning technician', 'Plant breeder', 'Police officer', 'Political party agent', 'Political party research officer', 'Practice nurse', 'Press photographer', 'Press sub-editor', 'Prison officer', 'Private music teacher', 'Probation officer', 'Product development scientist', 'Production manager', 'Programme researcher', 'Project manager', 'Psychologist (clinical)', 'Psychologist (educational)', 'Psychotherapist', 'Public affairs consultant (lobbyist)', 'Public affairs consultant (research)', 'Public house manager', 'Public librarian', 'Public relations (PR) officer', 'QA analyst', 'Quality assurance manager', 'Quantity surveyor', 'Records manager', 'Recruitment consultant', 'Recycling officer', 'Regulatory affairs officer', 'Research chemist', 'Research scientist', 'Restaurant manager', 'Retail banker', 'Retail buyer', 'Retail manager', 'Retail merchandiser', 'Retail pharmacist', 'Sales executive', 'Sales manager', 'Scene of crime officer', 'Secretary', 'Seismic interpreter', 'Site engineer', 'Site manager', 'Social researcher', 'Social worker', 'Software developer', 'Soil scientist', 'Solicitor', 'Speech and language therapist', 'Sports coach', 'Sports development officer', 'Sports therapist', 'Statistician', 'Stockbroker', 'Structural engineer', 'Systems analyst', 'Systems developer', 'Tax inspector', 'Teacher (nursery/early years)', 'Teacher (primary)', 'Teacher (secondary)', 'Teacher (special educational needs)', 'Teaching/classroom assistant', 'Technical author', 'Technical sales engineer', 'TEFL/TESL teacher', 'Television production assistant', 'Test automation developer', 'Tour operator', 'Tourism officer', 'Tourist information manager', 'Town and country planner', 'Toxicologist', 'Trade union research officer', 'Trader', 'Trading standards officer', 'Training and development officer', 'Translator', 'Transportation planner', 'Travel agent', 'TV/film/theatre set designer', 'UX designer', 'Validation engineer', 'Veterinary nurse', 'Veterinary surgeon', 'Video game designer', 'Video game developer', 'Volunteer work organiser', 'Warehouse manager', 'Waste disposal officer', 'Water conservation officer', 'Water engineer', 'Web designer', 'Web developer', 'Welfare rights adviser', 'Writer', 'Youth worker']
    
    #google maps key
    key='AIzaSyCGhBJGq4IiN-H_nR_Zn3qN4Fy89p0gOr0'

    for i in range(len(locationRandom)):

        # getting location from maps
        session = requests.session()
        urlMaps = 'https://maps.googleapis.com/maps/api/geocode/json?address='+ location[i] + '&key=' + key
        request = session.get(urlMaps)
        maps = request.json()
        maps = maps['results'][0]['geometry']['location']
        maps['name'] = location[i]
        
        for i in range(len(joblist)):
            
            #scrape job
            scrape = ScrapeJobsView()
            scrape.scrape_jobs(joblist[i],maps,numJobs,countries[0],remote[0],dist)

            #extract skill
            extract = ExtractSkillsView()
            titles = JobTitle.objects.filter(name=joblist[i].lower())
            if (len(titles) > 0):
                title = titles[0]
                (x1, x2, y1, y2) = extract.get_coordinates(maps, dist)
                jobs = JobPosting.objects.filter(location__lat__gte=x1, location__lat__lte=x2, location__lng__gte=y1, location__lng__lte=y2, job_title=title)
                extract.extract_skills(jobs,title,maps)

def job_schedule():
    run()